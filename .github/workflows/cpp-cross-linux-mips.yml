name: C/C++ CI linux cross mipsel

on: [push]

jobs:
  build:
    strategy:
      matrix:
        include:
        
        - buildtype: Debug
          archtype: mipsel
          arch: mipsel
          crosscompiler: https://downloads.openwrt.org/releases/21.02.0/targets/ramips/mt7621/openwrt-sdk-21.02.0-ramips-mt7621_gcc-8.4.0_musl.Linux-x86_64.tar.xz
          prefix: mipsel-openwrt-linux

        - buildtype: Release
          archtype: mipsel
          arch: mipsel
          crosscompiler: https://downloads.openwrt.org/releases/21.02.0/targets/ramips/mt7621/openwrt-sdk-21.02.0-ramips-mt7621_gcc-8.4.0_musl.Linux-x86_64.tar.xz
          prefix: mipsel-openwrt-linux

    runs-on: ubuntu-latest
    
    steps:
    - name: Remove unnecessary directories to free up space
      run: |
        sudo rm -rf /opt/hostedtoolcache/CodeQL
        sudo rm -rf /usr/local/lib/android/sdk/ndk
        sudo rm -rf /usr/share/dotnet

    - uses: actions/checkout@v4
    - run: git fetch --prune --unshallow --tags

    - name: pkg
      run: | 
        sudo apt-get update 
        sudo apt-get install -y --no-install-recommends g++ autoconf automake libtool xz-utils cmake p7zip-full
        if [ -z "${{ matrix.crosscompiler }}" ]; then
          sudo apt-get install -y --no-install-recommends gcc-${{ matrix.prefix }} g++-${{ matrix.prefix }}
        else
          wget -qO- ${{ matrix.crosscompiler }} | tar xJ
          echo "$(pwd)/$(ls -d openwrt-sdk-*)/staging_dir/toolchain-*/bin" >> $GITHUB_PATH
        fi

    - name: depot_tools
      run: |
          git clone --depth 1 https://chromium.googlesource.com/chromium/tools/depot_tools.git
          echo "$(pwd)/depot_tools" >> $GITHUB_PATH

    - name: fetch webrtc
      run: |
          mkdir webrtc
          pushd webrtc
          fetch --nohooks webrtc
          popd

    - name: build
      run: |
          export PATH=$(pwd)/webrtc/src/third_party/llvm-build/Release+Asserts/bin:$PATH
          cmake -DWEBRTCROOT=$(pwd)/webrtc -DCMAKE_BUILD_TYPE=${{ matrix.buildtype }} -DCMAKE_SYSTEM_PROCESSOR=${{ matrix.arch }} -DCMAKE_LIBRARY_ARCHITECTURE=${{ matrix.prefix }} -DCMAKE_SYSTEM_NAME=Linux -DCMAKE_C_COMPILER=${{ matrix.prefix }}-gcc -DCMAKE_CXX_COMPILER=${{ matrix.prefix }}-g++ -DCMAKE_FIND_ROOT_PATH_MODE_PROGRAM=NEVER -DCMAKE_FIND_ROOT_PATH_MODE_INCLUDE=ONLY -DCMAKE_FIND_ROOT_PATH_MODE_LIBRARY=ONLY -DCMAKE_FIND_ROOT_PATH_MODE_PACKAGE=ONLY -DWEBRTCDESKTOPCAPTURE=OFF .
          make

    - name: cpack 
      run: | 
          rm -f *.tar.gz
          cpack
          echo "artifactPath=$(ls *.tar.gz)" >> $GITHUB_ENV

    - uses: actions/upload-artifact@v3
      with:
        name: ${{ env.artifactPath }}
        path: ${{ env.artifactPath }}   

    - name: Release
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: ${{ env.artifactPath }}
